"""
峰值元素是指其值大于左右相邻值的元素。

给定一个输入数组 nums，其中 nums[i] ≠ nums[i+1]，找到峰值元素并返回其索引。

数组可能包含多个峰值，在这种情况下，返回任何一个峰值所在位置即可。

你可以假设 nums[-1] = nums[n] = -∞。

示例 1:

输入: nums = [1,2,3,1]
输出: 2
解释: 3 是峰值元素，你的函数应该返回其索引 2。
示例 2:

输入: nums = [1,2,1,3,5,6,4]
输出: 1 或 5 
解释: 你的函数可以返回索引 1，其峰值元素为 2；
     或者返回索引 5， 其峰值元素为 6。
说明:

你的解法应该是 O(logN) 时间复杂度的。

"""

# 解答：用二分法，每次找到l和r的中间元素m，如果nums[m] < nums[m + 1]，那峰值一定在m+1到n之间，因为 要么是nums[m + 1] > nums[ m+ 2]，峰值为nums[m + 1]
# 否则的话不是峰值后面就是一个递增序列，则最后一个元素一定大于nums[n]（负无穷）
# 如果Nums[m] > nums[m + 1]，则峰值在0到m之间，同理，要么是其中某个峰值，不然就是递减序列，nums[0]为峰值
# 不断二分直到找到峰值为止
class Solution:
    def findPeakElement(self, nums) -> int:
        if len(nums) == 1:
            return 0
        
        l = 0
        r = len(nums) - 1
        while l < r:
            m = (r - l) // 2 + l
            if nums[m] < nums[m + 1]:
                l = m + 1
            else:
                r = m
        
        
        return l